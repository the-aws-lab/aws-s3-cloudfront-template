AWSTemplateFormatVersion: "2010-09-09"
Description: "S3 and Cloudfront Setup for Static Site Deployment"

Parameters:
  ENV:
    Description: "Environment"
    Type: String
    Default: stage

  HostedZoneResource:
    Description: Application Hosted Zone
    Type: String
    Default: example.com

  BucketName:
    Description: Bucket Name
    Type: String
    Default: theawslab
    

Resources:

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", [!Ref ENV, !Ref BucketName]]
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref ENV, !Ref BucketName]]
        - Key: env
          Value: !Ref ENV

  FrontendOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties: 
      CloudFrontOriginAccessIdentityConfig: 
        Comment: My Origin Access Identity


  SampleBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref FrontendBucket
      PolicyDocument: 
        Statement: 
          - Action: ["s3:GetObject"]
            Effect: "Allow"
            Resource: !Join ["", ["arn:aws:s3:::", !Ref FrontendBucket, "/*"]]
            Principal: 
              AWS: !Join [" ", ["arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity", !Ref FrontendOAI]] 

  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties: 
      DistributionConfig: 
        Aliases: 
          - !Join [".", [ !Join ["-", [!Ref ENV, "app"]],!Ref HostedZoneResource]]
          #- !Join [".", ["stage-frontend", !Ref HostedZoneResource]]
        DefaultCacheBehavior: 
          AllowedMethods: 
            - GET
            - HEAD
          CachedMethods: 
            - GET
            - HEAD
          Compress: "False"
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: !Join ["-", ["S3", !Ref ENV, !Ref BucketName]]
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
        DefaultRootObject: index.html
        Enabled: "True"
        Origins:
          - DomainName: !GetAtt FrontendBucket.DomainName
            Id: !Join ["-", ["S3", !Ref ENV, !Ref BucketName]]
            S3OriginConfig:
              OriginAccessIdentity: !Join ["/", ["origin-access-identity/cloudfront", !Ref FrontendOAI]]
        ViewerCertificate: 
          AcmCertificateArn: !Ref CertificateManager
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only
      Tags: 
        - Key: Name
          Value: !Join ["-", [!Ref ENV, !Ref BucketName, "distribution"]]
        - Key: env
          Value: !Ref ENV

  CertificateManager:
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Ref HostedZoneResource
      DomainValidationOptions: 
        - DomainName: !Ref HostedZoneResource
          ValidationDomain: !Ref HostedZoneResource
      SubjectAlternativeNames: 
        - !Join [".", ['*',!Ref HostedZoneResource]]
      ValidationMethod: DNS

  HostName:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Join ['', [!Ref HostedZoneResource, '.']]
      Comment: DNS name for angular app.
      Name: !Join ['', [!Join ['-',[!Ref ENV, 'app']], '.', !Ref HostedZoneResource, '.']]
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !GetAtt FrontendDistribution.DomainName 

Outputs:

  AppDNS:
      Description: Application endpoint
      Value: !Ref HostName
      Export:
        Name: !Join ["-", [!Ref ENV,"app-endpoint"]]
